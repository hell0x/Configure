1、项目: 	省钱快报               项目时间:	 2019.10-至今 

项目描述：
省钱快报是一款行业排名前几的综合购物返利APP。
数据：日活DAU平均每天180w，日均QPS1.4w，双十一QPS峰值能达到2.9W+。
架构：
负载均衡服务器(阿里云SLB)
API网关Kong(Nginx+lua)
前台(APP)
中台
	业务中台(资产中心，转链，红包，订单，商品库，用户中心，收藏中心等)
	技术中台(数据库连接池，发号器，应用配置，ab系统，日志服务等)
技术支持(全链路压测，智能监控，相关运维平台)

工作内容：
========================需求迭代1个========================
主要负责业务中台的相关需求开发以及优化
如省钱快报的业务中台如返利商城，运营位，资产中心，比价等需求的开发迭代
========================拆分重构2个========================
coupon-sdk拆分(扩展业务通用模块重构)
	1.从v2中拆分各平台(淘宝，天猫，京东)商品的SDK处理包到composer
	2.用工厂模式+模板模式进行重构
	3.多个箭头连一起
	4.优化
	业绩：
运营位拆分(通用服务拆分)
	1.设计模式
	2.分库分表
	3.RT优化
	4.缓存雪崩
		数据节点庞大 extends运营位信息占用了过多耗时
		增加缓存预热脚本,书籍缓存时间加长。
		合并redis查询、修改请求，查询两次缓存、修改3个缓存。改用pipeline查询。
	业绩：
	RT下降60%以上
========================优化写几个简单介绍========================
春节红包活动(优化) 用布隆过滤器优化春节游戏红包活动的缓存穿透问题
余额抵业务延时队列做兜底 分布式锁优化多次请求问题
用户签到改成redis 位图
swoole协程	解决头条外部接口访问慢引发拖慢整体问题
swoole table
异步化

一致性哈希
========================为团队做的贡献(比如系统什么的)========================
资产服务 容错 
性能优化
成本控制 释放redis等(190G->不到100G)
========================其它========================
面试的时候 PHP和redis的底层 从里面学到了什么
日志服务重构 数据压缩 降级
数据库连接池
基础监控
Argus业务监控
安全中心
网关层降级 降级、限流、缓存插件
代码快速回滚 快速切换到上一个稳定版本
商品列表相关业务 开关化、数据降级
k8s
websocket建立长链接
